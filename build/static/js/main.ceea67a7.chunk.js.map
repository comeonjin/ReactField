{"version":3,"sources":["components/Table.jsx","components/Form.jsx","components/App.js","index.js"],"names":["TableHeader","TableBody","props","tableBodyDate","characterData","map","item","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"2PAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,yCAMFC,EAAY,SAACC,GAAW,IAEtBC,EADoBD,EAAlBE,cAC4BC,KAAI,SAACC,EAAMC,GAC7C,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAKG,MACV,4BAAKH,EAAKI,KACV,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKR,OACE,+BACGJ,IAiBQU,E,iLAXH,IAAD,EACoCC,KAAKZ,MAAxCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBACvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAN9CG,a,OCiBLC,E,YAhDb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAURe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,KAfO,EAmBnBE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAClBhB,KAAM,GACNC,IAAK,IAGP,EAAKc,MAAQ,EAAKC,aARD,E,sEAwBT,IAAD,EACeX,KAAKU,MAAnBf,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,uCACA,2BACEgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eACjB,sCACA,2BACES,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eACjB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GA1CvCP,aCkCJa,E,2MA/BbJ,MAAQ,CACNK,WAAW,I,EAGbjB,gBAAkB,SAACL,GAAW,IACrBsB,EAAc,EAAKL,MAAnBK,WACP,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,Q,EAKnBgB,aAAe,SAAAQ,GACb,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAGhD,IACAF,EAAcf,KAAKU,MAAnBK,WACP,OACE,yBAAKI,UAAU,aACb,6CAGA,kBAAC,EAAD,CAAO7B,cAAeyB,EAAYjB,gBAAiBE,KAAKF,kBACxD,kBAAC,EAAD,CAAMW,aAAcT,KAAKS,oB,GA1BfR,a,MCGlBmB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ceea67a7.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n  const { characterData } = props;\n  const tableBodyDate = characterData.map((item, index) => {\n    return (\n      <tr key={index}>\n        <td>{item.name}</td>\n        <td>{item.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return (\n    <tbody>\n      {tableBodyDate}\n    </tbody>\n  )\n}\n\nclass Table extends Component {\n  render() {\n    const { characterData, removeCharacter } = this.props\n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n      </table>\n    )\n  }\n}\n\nexport default Table;","import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      name: '',\n      job: '',\n    }\n\n    this.state = this.initialState\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target\n  \n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { name, job } = this.state;\n  \n    return (\n      <form>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange} />\n        <label>Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange} />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n\n}\n\nexport default Form;","import React, {Component} from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component{\n  state = {\n    characters:[]\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state;\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = character => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n\n  render(){\n    const {characters} = this.state\n    return (\n      <div className=\"container\">\n        <h1>\n          Hello, React!\n        </h1>\n        <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n        <Form handleSubmit={this.handleSubmit}/>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}